# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

#from swagger_server.models.base_model_ import Model
from flight_land_or_dep import FlightLandOrDep  # noqa: F401,E501
from util import *


class Flight():
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, flight_date: date=None, flight_number: int=None, flight_duration: int=None, cancelled: bool=None, diverted: bool=None, tail_number: str=None, airline_code: str=None, departure: FlightLandOrDep=None, arrival: FlightLandOrDep=None):  # noqa: E501
        """Flight - a model defined in Swagger

        :param flight_date: The flight_date of this Flight.  # noqa: E501
        :type flight_date: date
        :param flight_number: The flight_number of this Flight.  # noqa: E501
        :type flight_number: int
        :param flight_duration: The flight_duration of this Flight.  # noqa: E501
        :type flight_duration: int
        :param cancelled: The cancelled of this Flight.  # noqa: E501
        :type cancelled: bool
        :param diverted: The diverted of this Flight.  # noqa: E501
        :type diverted: bool
        :param tail_number: The tail_number of this Flight.  # noqa: E501
        :type tail_number: str
        :param airline_code: The airline_code of this Flight.  # noqa: E501
        :type airline_code: str
        :param departure: The departure of this Flight.  # noqa: E501
        :type departure: FlightLandOrDep
        :param arrival: The arrival of this Flight.  # noqa: E501
        :type arrival: FlightLandOrDep
        """
        self.swagger_types = {
            'flight_date': date,
            'flight_number': int,
            'flight_duration': int,
            'cancelled': bool,
            'diverted': bool,
            'tail_number': str,
            'airline_code': str,
            'departure': FlightLandOrDep,
            'arrival': FlightLandOrDep
        }

        self.attribute_map = {
            'flight_date': 'flightDate',
            'flight_number': 'flightNumber',
            'flight_duration': 'flightDuration',
            'cancelled': 'cancelled',
            'diverted': 'diverted',
            'tail_number': 'tailNumber',
            'airline_code': 'airlineCode',
            'departure': 'departure',
            'arrival': 'arrival'
        }
        self._flight_date = flight_date
        self._flight_number = flight_number
        self._flight_duration = flight_duration
        self._cancelled = cancelled
        self._diverted = diverted
        self._tail_number = tail_number
        self._airline_code = airline_code
        self._departure = departure
        self._arrival = arrival

    @classmethod
    def from_dict(cls, dikt) -> 'Flight':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Flight of this Flight.  # noqa: E501
        :rtype: Flight
        """
        return util.deserialize_model(dikt, cls)

    @property
    def flight_date(self) -> date:
        """Gets the flight_date of this Flight.


        :return: The flight_date of this Flight.
        :rtype: date
        """
        return self._flight_date

    @flight_date.setter
    def flight_date(self, flight_date: date):
        """Sets the flight_date of this Flight.


        :param flight_date: The flight_date of this Flight.
        :type flight_date: date
        """

        self._flight_date = flight_date

    @property
    def flight_number(self) -> int:
        """Gets the flight_number of this Flight.


        :return: The flight_number of this Flight.
        :rtype: int
        """
        return self._flight_number

    @flight_number.setter
    def flight_number(self, flight_number: int):
        """Sets the flight_number of this Flight.


        :param flight_number: The flight_number of this Flight.
        :type flight_number: int
        """

        self._flight_number = flight_number

    @property
    def flight_duration(self) -> int:
        """Gets the flight_duration of this Flight.


        :return: The flight_duration of this Flight.
        :rtype: int
        """
        return self._flight_duration

    @flight_duration.setter
    def flight_duration(self, flight_duration: int):
        """Sets the flight_duration of this Flight.


        :param flight_duration: The flight_duration of this Flight.
        :type flight_duration: int
        """

        self._flight_duration = flight_duration

    @property
    def cancelled(self) -> bool:
        """Gets the cancelled of this Flight.


        :return: The cancelled of this Flight.
        :rtype: bool
        """
        return self._cancelled

    @cancelled.setter
    def cancelled(self, cancelled: bool):
        """Sets the cancelled of this Flight.


        :param cancelled: The cancelled of this Flight.
        :type cancelled: bool
        """

        self._cancelled = cancelled

    @property
    def diverted(self) -> bool:
        """Gets the diverted of this Flight.


        :return: The diverted of this Flight.
        :rtype: bool
        """
        return self._diverted

    @diverted.setter
    def diverted(self, diverted: bool):
        """Sets the diverted of this Flight.


        :param diverted: The diverted of this Flight.
        :type diverted: bool
        """

        self._diverted = diverted

    @property
    def tail_number(self) -> str:
        """Gets the tail_number of this Flight.


        :return: The tail_number of this Flight.
        :rtype: str
        """
        return self._tail_number

    @tail_number.setter
    def tail_number(self, tail_number: str):
        """Sets the tail_number of this Flight.


        :param tail_number: The tail_number of this Flight.
        :type tail_number: str
        """

        self._tail_number = tail_number

    @property
    def airline_code(self) -> str:
        """Gets the airline_code of this Flight.


        :return: The airline_code of this Flight.
        :rtype: str
        """
        return self._airline_code

    @airline_code.setter
    def airline_code(self, airline_code: str):
        """Sets the airline_code of this Flight.


        :param airline_code: The airline_code of this Flight.
        :type airline_code: str
        """

        self._airline_code = airline_code

    @property
    def departure(self) -> FlightLandOrDep:
        """Gets the departure of this Flight.


        :return: The departure of this Flight.
        :rtype: FlightLandOrDep
        """
        return self._departure

    @departure.setter
    def departure(self, departure: FlightLandOrDep):
        """Sets the departure of this Flight.


        :param departure: The departure of this Flight.
        :type departure: FlightLandOrDep
        """

        self._departure = departure

    @property
    def arrival(self) -> FlightLandOrDep:
        """Gets the arrival of this Flight.


        :return: The arrival of this Flight.
        :rtype: FlightLandOrDep
        """
        return self._arrival

    @arrival.setter
    def arrival(self, arrival: FlightLandOrDep):
        """Sets the arrival of this Flight.


        :param arrival: The arrival of this Flight.
        :type arrival: FlightLandOrDep
        """

        self._arrival = arrival
