# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

#from swagger_server.models.base_model_ import Model
from util import *


class FlightLandOrDep():
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, airport_id: int=None, scheduled: int=None, actual: int=None, delay: int=None):  # noqa: E501
        """FlightLandOrDep - a model defined in Swagger

        :param airport_id: The airport_id of this FlightLandOrDep.  # noqa: E501
        :type airport_id: int
        :param scheduled: The scheduled of this FlightLandOrDep.  # noqa: E501
        :type scheduled: int
        :param actual: The actual of this FlightLandOrDep.  # noqa: E501
        :type actual: int
        :param delay: The delay of this FlightLandOrDep.  # noqa: E501
        :type delay: int
        """
        self.swagger_types = {
            'airport_id': int,
            'scheduled': int,
            'actual': int,
            'delay': int
        }

        self.attribute_map = {
            'airport_id': 'airportId',
            'scheduled': 'scheduled',
            'actual': 'actual',
            'delay': 'delay'
        }
        self._airport_id = airport_id
        self._scheduled = scheduled
        self._actual = actual
        self._delay = delay

    @classmethod
    def from_dict(cls, dikt) -> 'FlightLandOrDep':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The FlightLandOrDep of this FlightLandOrDep.  # noqa: E501
        :rtype: FlightLandOrDep
        """
        return util.deserialize_model(dikt, cls)

    @property
    def airport_id(self) -> int:
        """Gets the airport_id of this FlightLandOrDep.


        :return: The airport_id of this FlightLandOrDep.
        :rtype: int
        """
        return self._airport_id

    @airport_id.setter
    def airport_id(self, airport_id: int):
        """Sets the airport_id of this FlightLandOrDep.


        :param airport_id: The airport_id of this FlightLandOrDep.
        :type airport_id: int
        """

        self._airport_id = airport_id

    @property
    def scheduled(self) -> int:
        """Gets the scheduled of this FlightLandOrDep.


        :return: The scheduled of this FlightLandOrDep.
        :rtype: int
        """
        return self._scheduled

    @scheduled.setter
    def scheduled(self, scheduled: int):
        """Sets the scheduled of this FlightLandOrDep.


        :param scheduled: The scheduled of this FlightLandOrDep.
        :type scheduled: int
        """

        self._scheduled = scheduled

    @property
    def actual(self) -> int:
        """Gets the actual of this FlightLandOrDep.


        :return: The actual of this FlightLandOrDep.
        :rtype: int
        """
        return self._actual

    @actual.setter
    def actual(self, actual: int):
        """Sets the actual of this FlightLandOrDep.


        :param actual: The actual of this FlightLandOrDep.
        :type actual: int
        """

        self._actual = actual

    @property
    def delay(self) -> int:
        """Gets the delay of this FlightLandOrDep.


        :return: The delay of this FlightLandOrDep.
        :rtype: int
        """
        return self._delay

    @delay.setter
    def delay(self, delay: int):
        """Sets the delay of this FlightLandOrDep.


        :param delay: The delay of this FlightLandOrDep.
        :type delay: int
        """

        self._delay = delay
